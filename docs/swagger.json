{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Aqua Tracker App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Add and save your consumed water, control your daily water rate"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nodejs-hw-mongodb-okzz"
    }
  ],
  "tags": [
    {
      "name": "Water",
      "description": "Operations about consumed water"
    },
    {
      "name": "Users",
      "description": "Operations about users"
    },
    {
      "name": "Auth",
      "description": "Auth operations"
    }
  ],
  "paths": {
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Create water",
        "operationId": "createWater",
        "description": "Create water with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "waterAmount",
                  "date"
                ],
                "properties": {
                  "waterAmount": {
                    "description": "Water amount",
                    "type": "number",
                    "example": 250
                  },
                  "date": {
                    "description": "Date of added water",
                    "type": "string",
                    "example": "2024-08-03T18:26"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates water",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a water!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/day": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get list of waters for day",
        "operationId": "getWatersForDay",
        "description": "Get list of waters with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string",
              "example": "65e4decdd286b30065d54af9"
            },
            "description": "The ID of the user to filter resources"
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "example": "2024-08-03"
            },
            "description": "The date of the added water to filter resources"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found waters for day",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get waters for 2024-08-03"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "dailyProgress",
                        "waters"
                      ],
                      "properties": {
                        "dailyProgress": {
                          "type": "number",
                          "example": 100
                        },
                        "waters": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/water"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get list of waters for month",
        "operationId": "getWatersForMonth",
        "description": "Get list of waters with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string",
              "example": "65e4decdd286b30065d54af9"
            },
            "description": "The ID of the user to filter resources"
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "example": "2024-08"
            },
            "description": "The date of the added water to filter resources"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found waters for month",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get waters for 2024-08"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "dailyProgress",
                        "waters"
                      ],
                      "properties": {
                        "dailyProgress": {
                          "type": "number",
                          "example": 100
                        },
                        "waters": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/water"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/{waterId}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update water by id",
        "operationId": "patchWater",
        "description": "Update water by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "waterId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "waterAmount": {
                    "description": "Water amount",
                    "type": "number",
                    "example": 250
                  },
                  "date": {
                    "description": "Date of added water",
                    "type": "string",
                    "example": "2024-08-03T18:26"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update water by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a water!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water by id",
        "operationId": "deleteWater",
        "description": "Delete water by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "waterId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get number of users",
        "operationId": "getUsers",
        "description": "Get number of registered users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found users!"
                    },
                    "data": {
                      "type": "number",
                      "example": 21
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by id",
        "operationId": "getUserById",
        "description": "Get user by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user with id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user with id 65e4decdd286b30065d54af9!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/userById"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user by id",
        "operationId": "patchUser",
        "description": "Update user by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "Iryna Pavlyk"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "$2b$10$r/nQxWw/b1nfjWVJKjJGJeNg6bTPD5j5bAWruu.MyZCLr8kver8wW"
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "enum": [
                      "woman",
                      "man"
                    ],
                    "default": "woman"
                  },
                  "weight": {
                    "description": "User's weight",
                    "type": "number",
                    "example": 79,
                    "default": 0
                  },
                  "timeOfSportActivities": {
                    "description": "User's time of sport activities",
                    "type": "number",
                    "example": 2,
                    "default": 0
                  },
                  "waterToDrink": {
                    "description": "User's number of water to drink",
                    "type": "number",
                    "example": 1.5,
                    "default": 1500
                  },
                  "avatar": {
                    "description": "Link to user's photo",
                    "type": "string",
                    "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings were updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Settings were updated successfully!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/userById"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "signupUser",
        "description": "Register user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "irina@mail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": 111111
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "signinUser",
        "description": "Login a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "irina@mail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": 111111
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/session"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user",
        "operationId": "refreshUser",
        "description": "Refresh a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "irina@mail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": 111111
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed a session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/session"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "irina@mail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": 111111
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The user was logout successfully."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "water": {
        "type": "object",
        "required": [
          "waterAmount",
          "date",
          "userId",
          "_id"
        ],
        "properties": {
          "waterAmount": {
            "description": "Water amount",
            "type": "number",
            "example": 250
          },
          "date": {
            "description": "Date of added water",
            "type": "string",
            "example": "2024-08-03T18:26"
          },
          "userId": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "_id": {
            "description": "Water's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          }
        }
      },
      "userById": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "Iryna Pavlyk"
          },
          "email": {
            "description": "Contact's email",
            "type": "string",
            "example": "irina@mail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "$2b$10$r/nQxWw/b1nfjWVJKjJGJeNg6bTPD5j5bAWruu.MyZCLr8kver8wW"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ],
            "default": "woman"
          },
          "weight": {
            "description": "User's weight",
            "type": "number",
            "example": 79,
            "default": 0
          },
          "timeOfSportActivities": {
            "description": "User's time of sport activities",
            "type": "number",
            "example": 2,
            "default": 0
          },
          "waterToDrink": {
            "description": "User's number of water to drink",
            "type": "number",
            "example": 1.5,
            "default": 1500
          },
          "avatar": {
            "description": "Link to user's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "description": "Contact's email",
            "type": "string",
            "example": "irina@mail.com"
          }
        }
      },
      "session": {
        "type": "object",
        "required": [
          "accessToken"
        ],
        "properties": {
          "accessToken": {
            "description": "User's accessToken",
            "type": "string",
            "example": "zBjaZKgFS/Md+br4xj9Mt2LK+1RfvpukB4iGo6zC"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "BadRequestError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session not found!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "ConflictError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Something went wrong",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}